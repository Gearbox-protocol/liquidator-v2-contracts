/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type { IRouterV3, IRouterV3Interface } from "../IRouterV3";

const _abi = [
  {
    type: "function",
    name: "findBestClosePath",
    inputs: [
      {
        name: "creditAccount",
        type: "address",
        internalType: "address",
      },
      {
        name: "expectedBalances",
        type: "tuple[]",
        internalType: "struct Balance[]",
        components: [
          {
            name: "token",
            type: "address",
            internalType: "address",
          },
          {
            name: "balance",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
      {
        name: "leftoverBalances",
        type: "tuple[]",
        internalType: "struct Balance[]",
        components: [
          {
            name: "token",
            type: "address",
            internalType: "address",
          },
          {
            name: "balance",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
      {
        name: "connectors",
        type: "address[]",
        internalType: "address[]",
      },
      {
        name: "slippage",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "pathOptions",
        type: "tuple[]",
        internalType: "struct PathOption[]",
        components: [
          {
            name: "target",
            type: "address",
            internalType: "address",
          },
          {
            name: "option",
            type: "uint8",
            internalType: "uint8",
          },
          {
            name: "totalOptions",
            type: "uint8",
            internalType: "uint8",
          },
        ],
      },
      {
        name: "iterations",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "force",
        type: "bool",
        internalType: "bool",
      },
    ],
    outputs: [
      {
        name: "result",
        type: "tuple",
        internalType: "struct RouterResult",
        components: [
          {
            name: "amount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "calls",
            type: "tuple[]",
            internalType: "struct MultiCall[]",
            components: [
              {
                name: "target",
                type: "address",
                internalType: "address",
              },
              {
                name: "callData",
                type: "bytes",
                internalType: "bytes",
              },
            ],
          },
        ],
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "findOneTokenPath",
    inputs: [
      {
        name: "tokenIn",
        type: "address",
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "tokenOut",
        type: "address",
        internalType: "address",
      },
      {
        name: "creditAccount",
        type: "address",
        internalType: "address",
      },
      {
        name: "connectors",
        type: "address[]",
        internalType: "address[]",
      },
      {
        name: "slippage",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct RouterResult",
        components: [
          {
            name: "amount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "minAmount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "calls",
            type: "tuple[]",
            internalType: "struct MultiCall[]",
            components: [
              {
                name: "target",
                type: "address",
                internalType: "address",
              },
              {
                name: "callData",
                type: "bytes",
                internalType: "bytes",
              },
            ],
          },
        ],
      },
    ],
    stateMutability: "nonpayable",
  },
] as const;

export class IRouterV3__factory {
  static readonly abi = _abi;
  static createInterface(): IRouterV3Interface {
    return new Interface(_abi) as IRouterV3Interface;
  }
  static connect(address: string, runner?: ContractRunner | null): IRouterV3 {
    return new Contract(address, _abi, runner) as unknown as IRouterV3;
  }
}
