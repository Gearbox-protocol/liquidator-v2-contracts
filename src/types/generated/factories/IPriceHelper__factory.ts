/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type { IPriceHelper, IPriceHelperInterface } from "../IPriceHelper";

const _abi = [
  {
    type: "function",
    name: "previewTokens",
    inputs: [
      {
        name: "creditAccount",
        type: "address",
        internalType: "address",
      },
      {
        name: "priceUpdates",
        type: "tuple[]",
        internalType: "struct PriceOnDemand[]",
        components: [
          {
            name: "token",
            type: "address",
            internalType: "address",
          },
          {
            name: "callData",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    outputs: [
      {
        name: "results",
        type: "tuple[]",
        internalType: "struct TokenPriceInfo[]",
        components: [
          {
            name: "token",
            type: "address",
            internalType: "address",
          },
          {
            name: "balance",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "balanceInUnderlying",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "liquidationThreshold",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    stateMutability: "nonpayable",
  },
] as const;

export class IPriceHelper__factory {
  static readonly abi = _abi;
  static createInterface(): IPriceHelperInterface {
    return new Interface(_abi) as IPriceHelperInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IPriceHelper {
    return new Contract(address, _abi, runner) as unknown as IPriceHelper;
  }
}
