/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IBatchLiquidator,
  IBatchLiquidatorInterface,
} from "../IBatchLiquidator";

const _abi = [
  {
    type: "function",
    name: "estimateBatch",
    inputs: [
      {
        name: "params",
        type: "tuple[]",
        internalType: "struct RouterLiqParams[]",
        components: [
          {
            name: "creditAccount",
            type: "address",
            internalType: "address",
          },
          {
            name: "expectedBalances",
            type: "tuple[]",
            internalType: "struct Balance[]",
            components: [
              {
                name: "token",
                type: "address",
                internalType: "address",
              },
              {
                name: "balance",
                type: "uint256",
                internalType: "uint256",
              },
            ],
          },
          {
            name: "leftoverBalances",
            type: "tuple[]",
            internalType: "struct Balance[]",
            components: [
              {
                name: "token",
                type: "address",
                internalType: "address",
              },
              {
                name: "balance",
                type: "uint256",
                internalType: "uint256",
              },
            ],
          },
          {
            name: "connectors",
            type: "address[]",
            internalType: "address[]",
          },
          {
            name: "slippage",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "pathOptions",
            type: "tuple[]",
            internalType: "struct PathOption[]",
            components: [
              {
                name: "target",
                type: "address",
                internalType: "address",
              },
              {
                name: "option",
                type: "uint8",
                internalType: "uint8",
              },
              {
                name: "totalOptions",
                type: "uint8",
                internalType: "uint8",
              },
            ],
          },
          {
            name: "iterations",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "force",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
    ],
    outputs: [
      {
        name: "results",
        type: "tuple[]",
        internalType: "struct LiquidationResult[]",
        components: [
          {
            name: "creditAccount",
            type: "address",
            internalType: "address",
          },
          {
            name: "pathFound",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "executed",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "profit",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "calls",
            type: "tuple[]",
            internalType: "struct MultiCall[]",
            components: [
              {
                name: "target",
                type: "address",
                internalType: "address",
              },
              {
                name: "callData",
                type: "bytes",
                internalType: "bytes",
              },
            ],
          },
        ],
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "liquidateBatch",
    inputs: [
      {
        name: "params",
        type: "tuple[]",
        internalType: "struct LiqParams[]",
        components: [
          {
            name: "creditFacade",
            type: "address",
            internalType: "address",
          },
          {
            name: "creditAccount",
            type: "address",
            internalType: "address",
          },
          {
            name: "calls",
            type: "tuple[]",
            internalType: "struct MultiCall[]",
            components: [
              {
                name: "target",
                type: "address",
                internalType: "address",
              },
              {
                name: "callData",
                type: "bytes",
                internalType: "bytes",
              },
            ],
          },
        ],
      },
      {
        name: "to",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "success",
        type: "bool[]",
        internalType: "bool[]",
      },
    ],
    stateMutability: "nonpayable",
  },
] as const;

export class IBatchLiquidator__factory {
  static readonly abi = _abi;
  static createInterface(): IBatchLiquidatorInterface {
    return new Interface(_abi) as IBatchLiquidatorInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IBatchLiquidator {
    return new Contract(address, _abi, runner) as unknown as IBatchLiquidator;
  }
}
